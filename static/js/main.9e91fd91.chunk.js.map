{"version":3,"sources":["context/albums/albumsContext.js","components/Search/index.jsx","components/Header/index.jsx","constants/routes.js","components/AlbumItem/index.jsx","components/AlbumContainer/index.jsx","components/LoadingSpinner/index.jsx","pages/Home/index.jsx","pages/Artist/index.jsx","App.jsx","context/albums/albumsReducer.js","context/types.js","axios/index.js","config/index.js","utils/index.js","constants/api.js","context/albums/AlbumsState.js","index.jsx"],"names":["albumsContext","createContext","Search","useContext","AlbumsContext","searchTerm","setSearchTerm","className","onSubmit","event","preventDefault","type","placeholder","onChange","target","value","Header","props","to","title","hasSearch","onSearchChange","AlbumItem","toggleFavorite","resolveFavoriteCta","favorite","onClick","id","src","imageUrl","alt","artistId","artistName","Date","releaseDate","getFullYear","price","AlbumContainer","albums","map","album","key","artist","LoadingSpinner","class","Home","urlParams","useLocation","search","fetchAlbums","loading","useEffect","length","Artist","useParams","currentArtistAlbums","filter","Number","resolveContent","App","path","component","state","action","payload","activeConfig","baseURL","axiosInstance","axios","create","resolveApiUrl","searchParams","URLSearchParams","limit","parseInt","get","query","AlbumsState","useReducer","AlbumsReducer","dispatch","a","setLoading","url","res","data","Provider","term","albumId","updatedAlbums","albumIndex","findIndex","newFavoriteStatus","patch","then","catch","err","console","error","children","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e91fd91.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst albumsContext = createContext();\r\n\r\nexport default albumsContext;\r\n","import React, { useContext } from 'react';\r\n\r\nimport AlbumsContext from '../../context/albums/albumsContext';\r\n\r\nimport './style.scss';\r\n\r\nfunction Search() {\r\n    const albumsContext = useContext(AlbumsContext);\r\n    const {searchTerm, setSearchTerm} = albumsContext;\r\n\r\n    return (\r\n        <div className=\"search-container\">\r\n            <form onSubmit={event => event.preventDefault()}>\r\n                <input type=\"text\" placeholder=\"Search\" onChange={ event => setSearchTerm(event.target.value)} value={searchTerm} />\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Search from '../Search';\r\n\r\nimport * as routes from '../../constants/routes';\r\n\r\nimport './style.scss';\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"inner-container\">\r\n                <h1 className=\"page-title\">\r\n                    <Link to={routes.HOME} title=\"Home\">\r\n                        {props.title}\r\n                    </Link>\r\n                </h1>\r\n                {props.hasSearch ? <Search onSearchChange={props.onSearchChange} /> : null}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    hasSearch: PropTypes.bool,\r\n    onSearchChange: PropTypes.func\r\n};\r\n\r\nexport default Header;\r\n","export const HOME = '/';\r\nexport const ARTIST_ROOT = '/artist'\r\nexport const ARTIST = '/artist/:artistId'","import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport * as routes from '../../constants/routes';\r\n\r\nimport AlbumsContext from '../../context/albums/albumsContext';\r\n\r\nimport './style.scss';\r\n\r\nfunction AlbumItem(props) {\r\n    const toggleFavorite = useContext(AlbumsContext).toggleFavorite;\r\n\r\n    const getYear = () => {\r\n        return new Date(props.releaseDate).getFullYear();\r\n    };\r\n\r\n    const resolveFavoriteCta = props.favorite ? (\r\n        <button className=\"remove-favorite\" onClick={() => toggleFavorite(props.id)}>\r\n            Remove favorite\r\n        </button>\r\n    ) : (\r\n        <button className=\"add-favorite\" onClick={() => toggleFavorite(props.id)}>\r\n            Mark as favorite\r\n        </button>\r\n    );\r\n\r\n    return (\r\n        <div className=\"album-item\">\r\n            <div className=\"album-main-info\">\r\n                <div className={`album-cover-container${props.favorite ? ' has-star' : ''}`}>\r\n                    <img src={props.imageUrl} alt={`${props.title} album cover.`} className=\"album-cover\" />\r\n                </div>\r\n                <div className=\"name-title-container\">\r\n                    <div className=\"album-title\">{props.title}</div>\r\n                    \r\n                        <Link\r\n                            to={`${routes.ARTIST_ROOT}/${props.artistId}`}\r\n                            title={`View all albums from ${props.artistName}`}\r\n                            className=\"album-artist\"\r\n                        >\r\n                            {props.artistName}\r\n                        </Link>\r\n                    \r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"year-info\">\r\n                <span className=\"year-label\">Released: </span>\r\n                <span className=\"year-value\">{getYear()}</span>\r\n            </div>\r\n\r\n            <div className=\"price\">{props.price}</div>\r\n\r\n            <div className=\"favorite-container\">{resolveFavoriteCta}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nAlbumItem.propTypes = {\r\n    id: PropTypes.number,\r\n    title: PropTypes.string,\r\n    price: PropTypes.string,\r\n    imageUrl: PropTypes.string,\r\n    releaseDate: PropTypes.string,\r\n    favorite: PropTypes.bool,\r\n    artistId: PropTypes.number,\r\n    artistName: PropTypes.string\r\n};\r\n\r\nexport default AlbumItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './style.scss';\r\nimport AlbumItem from '../AlbumItem';\r\n\r\nfunction AlbumContainer(props) {\r\n    const renderAlbums = () => {\r\n        return props.albums.map((album) => (\r\n            <AlbumItem\r\n                key={album.id}\r\n                {...album}\r\n                artistName={album.artist.title}\r\n            />\r\n        ));\r\n    };\r\n    return <div className=\"album-container\">{renderAlbums()}</div>;\r\n}\r\n\r\nAlbumContainer.propTypes = {\r\n    albums: PropTypes.array\r\n};\r\n\r\nexport default AlbumContainer;\r\n","import React from 'react';\r\n\r\nimport './style.scss';\r\n\r\nfunction LoadingSpinner() {\r\n    return (\r\n        <div class=\"loader\">Loading...</div>\r\n    )\r\n}\r\n\r\nexport default LoadingSpinner\r\n\r\n","import React, { useEffect, useContext } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport AlbumsContext from '../../context/albums/albumsContext';\r\n\r\nimport Header from '../../components/Header';\r\nimport AlbumContainer from '../../components/AlbumContainer';\r\nimport LoadingSpinner from '../../components/LoadingSpinner';\r\n\r\nimport './style.scss';\r\n\r\nfunction Home() {\r\n    const urlParams = useLocation().search;\r\n    const albumsContext = useContext(AlbumsContext);\r\n    const { albums, searchTerm, fetchAlbums, loading } = albumsContext;\r\n\r\n    useEffect(() => {\r\n        fetchAlbums(urlParams);\r\n        //eslint-disable-next-line\r\n    }, [searchTerm]);\r\n\r\n    const resolveContent = () => {\r\n        if (loading) return <LoadingSpinner />;\r\n\r\n        return albums.length ? (\r\n            <AlbumContainer albums={albums} />\r\n        ) : (\r\n            <div className=\"no-results\">\r\n                No results found for <span className=\"search-term\">{searchTerm}</span>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Header title=\"Album list\" hasSearch />\r\n            {resolveContent()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useEffect, useContext } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport AlbumsContext from '../../context/albums/albumsContext';\r\n\r\nimport Header from '../../components/Header';\r\nimport AlbumContainer from '../../components/AlbumContainer';\r\nimport LoadingSpinner from '../../components/LoadingSpinner';\r\n\r\nfunction Artist() {\r\n    const { artistId } = useParams();\r\n    const albumsContext = useContext(AlbumsContext);\r\n    const { albums, fetchAlbums, loading } = albumsContext;\r\n\r\n    useEffect(() => {\r\n        if (albums.length === 0) {\r\n            fetchAlbums();\r\n        }\r\n        //eslint-disable-next-line\r\n    }, []);\r\n\r\n\r\n    const currentArtistAlbums = albums.filter((album) => album.artistId === Number(artistId));\r\n\r\n    const resolveContent = () => {\r\n        if (loading) return <LoadingSpinner />;\r\n\r\n        if (currentArtistAlbums.length) {\r\n            const artistName = currentArtistAlbums[0].artist.title;\r\n            return (\r\n                <div>\r\n                    <Header title={artistName} />\r\n                    <AlbumContainer albums={currentArtistAlbums} />\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <Header title=\"Unknown artist\" />\r\n                    <div className=\"no-results\">\r\n                        No results found for artist with ID of <strong>{artistId}</strong>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n\r\n    return resolveContent();\r\n\r\n    \r\n}\r\n\r\nexport default Artist;\r\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Artist from './pages/Artist';\n\nimport * as routes from './constants/routes';\n\nfunction App() {\n    return (\n        <div className=\"app\">\n            <Switch>\n                <Route path={routes.ARTIST} component={Artist} />\n                <Route path={routes.HOME} component={Home} />\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n","import * as types from '../types';\r\n\r\nexport default (state, action) => {\r\n    switch(action.type) {\r\n        case types.SET_ALBUMS:\r\n            return {\r\n                ...state,\r\n                albums: action.payload,\r\n                loading: false\r\n            }\r\n        case types.SET_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case types.SET_SEARCH_TERM:\r\n            return {\r\n                ...state,\r\n                searchTerm: action.payload\r\n            }\r\n        default: return state;\r\n    }\r\n}","export const SET_ALBUMS = 'SET_ALBUMS';\r\nexport const TOGGLE_FAVORITE = 'TOGGLE_FAVORITE';\r\nexport const SET_SEARCH_TERM = 'SET_SEARCH_TERM';\r\nexport const SET_LOADING = 'SET_LOADING';","import axios from 'axios';\r\nimport config from '../config'\r\n\r\nconst activeConfig = config[process.env.NODE_ENV];\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: activeConfig.baseURL\r\n});\r\n\r\nexport default axiosInstance;\r\n","export default {\r\n    development: {\r\n        baseURL: 'http://localhost:3004'\r\n    },\r\n    production: {\r\n        baseURL: 'https://albums-mock-backend.glitch.me'\r\n    }\r\n};\r\n","import * as api from '../constants/api';\r\n\r\nconst DEFAULT_LIMIT = 10;\r\n\r\nconst resolveApiUrl = (urlParams, searchTerm) => {\r\n    const searchParams = new URLSearchParams(urlParams);\r\n    const limit = parseInt(searchParams.get('limit')) || DEFAULT_LIMIT;\r\n\r\n    const query = searchTerm.length ? `&q=${searchTerm}` : '';\r\n\r\n    return `${api.ALBUMS}&_limit=${limit}${query}`;\r\n};\r\n\r\nexport { resolveApiUrl };","export const ALBUMS = '/albums?_expand=artist';\r\nexport const FAVORITE = '/albums';","import React, { useReducer } from 'react';\r\n\r\nimport AlbumsContext from './albumsContext';\r\nimport AlbumsReducer from './albumsReducer';\r\nimport axios from '../../axios';\r\nimport * as api from '../../constants/api';\r\nimport { resolveApiUrl } from '../../utils';\r\n\r\nimport * as types from '../types';\r\n\r\nconst AlbumsState = (props) => {\r\n    const initialState = {\r\n        albums: [],\r\n        searchTerm: '',\r\n        loading: false,\r\n    };\r\n\r\n    const [state, dispatch] = useReducer(AlbumsReducer, initialState);\r\n\r\n    // Fetch albums\r\n    const fetchAlbums = async (urlParams) => {\r\n        setLoading();\r\n        const url = resolveApiUrl(urlParams, state.searchTerm);\r\n        const res = await axios.get(url);\r\n\r\n        dispatch({\r\n            type: types.SET_ALBUMS,\r\n            payload: res.data,\r\n        });\r\n    };\r\n\r\n    // Set search\r\n    const setSearchTerm = (term) => dispatch({ type: types.SET_SEARCH_TERM, payload: term });\r\n\r\n    // Toggle favorite\r\n    const toggleFavorite = albumId => {\r\n        const updatedAlbums = [...state.albums];\r\n        const albumIndex = state.albums.findIndex(album => album.id === albumId);\r\n        const newFavoriteStatus = !state.albums[albumIndex].favorite;\r\n\r\n        const url = `${api.FAVORITE}/${albumId}`;\r\n        axios.patch(url, { favorite: newFavoriteStatus }).then(res => {\r\n            updatedAlbums[albumIndex].favorite = res.data.favorite;\r\n            dispatch({\r\n                type: types.SET_ALBUMS,\r\n                payload: updatedAlbums,\r\n            });\r\n        }).catch(err => {\r\n            console.error(err);\r\n        });\r\n            \r\n    };\r\n\r\n    // Set loading\r\n    const setLoading = () => dispatch({ type: types.SET_LOADING });\r\n\r\n    return (\r\n        <AlbumsContext.Provider\r\n            value={{\r\n                albums: state.albums,\r\n                searchTerm: state.searchTerm,\r\n                loading: state.loading,\r\n                fetchAlbums,\r\n                setSearchTerm,\r\n                toggleFavorite\r\n            }}\r\n        >\r\n            {props.children}\r\n        </AlbumsContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AlbumsState;\r\n","import './utils/polyfills';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\nimport AlbumsState from './context/albums/AlbumsState';\n\nimport './index.scss';\n\nReactDOM.render(\n    <React.StrictMode>\n        <AlbumsState>\n            <BrowserRouter>\n                <App />\n            </BrowserRouter>\n        </AlbumsState>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}